CREATE TABLE MUSICIAN
(
ID_NUMBER INT CONSTRAINT MUSICIAN_ID_NUMBER_PK PRIMARY KEY ,
NAME NVARCHAR(25) CONSTRAINT MUSICIAN_NAME_NN NOT NULL ,
PHONE_NUMBER NCHAR (11) ,
CITY NVARCHAR(25) ,
STREET NVARCHAR(25)
);

INSERT INTO MUSICIAN 
VALUES (1 , 'NADA' , '01111111111' , 'CAIRO' , 'FIFTH SETTELMENT');

INSERT INTO MUSICIAN 
VALUES (2 , 'MOHAMED' , '01111111112' , 'TOKYO' , NULL);

INSERT INTO MUSICIAN 
VALUES (3 , 'AHMED' , NULL , 'CAIRO' , 'NASR CITY');

INSERT INTO MUSICIAN 
VALUES (4 , 'ESRAA' , '01111111122' , 'CAIRO' , 'FIFTH SETTELMENT');

INSERT INTO MUSICIAN 
VALUES (5 , 'MOSTAFA' , '01111115111' , 'MEXICO' , NULL);

-- QUERY NUMBER 1 

SELECT ID_NUMBER
FROM MUSICIAN
WHERE NAME LIKE 'NA%';


-- QUERY NUMBER 2

SELECT ID_NUMBER , COUNT(*) 'NO.OF ALBUMS'
FROM ALBUM
GROUP BY ID_NUMBER
HAVING COUNT(*) >=1;
 
 -- QUERY NUMBER 3
-- i put (IN) as it returns a lot of records but if i put (=) it will run as it will return only one record so i used (IN)
 SELECT M.*
 FROM MUSICIAN M 
 WHERE M.ID_NUMBER IN 
                    ( SELECT A.ID_NUMBER
					 FROM ALBUM A 
					 WHERE A.COPY_RIGHT_DATE IS NULL);

-- QUERY NUMBER 4 

SELECT A.*
FROM ALBUM A JOIN MUSICIAN M
ON A.ID_NUMBER = M.ID_NUMBER
AND M.NAME = 'NADA';

--BONUS QUERY SUB QUERIES 

SELECT M.*
FROM MUSICIAN M 
WHERE M.ID_NUMBER = 
                     ( SELECT A.ID_NUMBER
					 FROM ALBUM A 
					 WHERE A.ALB_ID = 
					                   ( SELECT S.ALB_ID
									   FROM SONG S
									   WHERE S.TITLE = 'YOUM TALAT'));


-- BONUS JOIN

SELECT M.ID_NUMBER , A.ALB_ID , S.AUTHOR 
FROM MUSICIAN M JOIN ALBUM A 
ON M.ID_NUMBER = A.ID_NUMBER
                 JOIN SONG S 
			     ON A.ID_NUMBER = S.ALB_ID ;







CREATE TABLE ALBUM 
(
ALB_ID INT CONSTRAINT ALBUM_ALB_ID_PK PRIMARY KEY ,
COPY_RIGHT_DATE DATE ,
TITLE NVARCHAR(25) ,
ID_NUMBER INT
);

INSERT INTO ALBUM
VALUES (1 , '2000-03-03' , 'MEADDY EL NAS' , 1);

INSERT INTO ALBUM
VALUES (6 , '2000-03-03' , 'YA SALAM' , 1);

INSERT INTO ALBUM
VALUES (2 , '2001-12-31' , 'OMRO MA YEGHEEB' , 2);

INSERT INTO ALBUM
VALUES (3 , NULL , 'YA SALAM' , 3);

INSERT INTO ALBUM
VALUES (4 , '1999-03-05' , 'WALA ALIK' , 4);

INSERT INTO ALBUM
VALUES (5 , '2018-06-15' , 'ENSANI' , 5);


CREATE TABLE INSTRUMENT 
(
NAME NVARCHAR(25) CONSTRAINT INSTRUMENT_NAME_PK PRIMARY KEY ,
MUSICAL_KEY NVARCHAR(25)
);

INSERT INTO INSTRUMENT
VALUES ('PIANO' , 'C');

INSERT INTO INSTRUMENT
VALUES ('VIOLIN' , 'B-FLAT');

INSERT INTO INSTRUMENT
VALUES ('VIOLA' , 'E-FLAT');

INSERT INTO INSTRUMENT
VALUES ('HARP' , NULL);

INSERT INTO INSTRUMENT
VALUES ('ORGAN' , 'C');

 


CREATE TABLE SONG 
(
TITLE NVARCHAR (25) CONSTRAINT SONG_TITLE_PK PRIMARY KEY ,
AUTHOR NVARCHAR(25) CONSTRAINT SONG_AUTHOR_NN NOT NULL ,
ALB_ID INT 
);

INSERT INTO SONG
VALUES ('YOUM TALAT' , 'AMR DIAB' , 1 );

INSERT INTO SONG
VALUES ('MA BALASH' , 'HAMAKY' , 2 );

INSERT INTO SONG
VALUES ('YA BANAT' , 'NANCY AJRAM' , 3 );

INSERT INTO SONG
VALUES ('ENSAY' , 'SAAD LAMAJARRED' , 4 );

INSERT INTO SONG
VALUES ('HAWA HAWA' , 'SAMIRA SAID' , 5 );





CREATE TABLE PLAYS 
(
ID_NUMBER INT , 
NAME NVARCHAR(25) ,
CONSTRAINT PLAYS_ID_NUMBER_NAME_PK PRIMARY KEY (ID_NUMBER , NAME)
);

INSERT INTO PLAYS
VALUES ( 1 , 'PIANO');

INSERT INTO PLAYS
VALUES ( 2 , 'ORGAN');

INSERT INTO PLAYS
VALUES ( 3 , 'VIOLA');

INSERT INTO PLAYS
VALUES ( 4 , 'HARP');

INSERT INTO PLAYS
VALUES ( 5 , 'VIOLIN' );






CREATE TABLE MUSICIAN_SONG 
(
ID_NUMBER INT , 
TITLE NVARCHAR (25),
CONSTRAINT MUSICIAN_SONG_ID_NUMBER_TITLE_PK PRIMARY KEY (ID_NUMBER , TITLE)
);

INSERT INTO MUSICIAN_SONG
VALUES ( 1 , 'YOUM TALAT');

INSERT INTO MUSICIAN_SONG
VALUES ( 2 , 'MA BALASH');

INSERT INTO MUSICIAN_SONG
VALUES ( 3 , 'YA BANAT');

INSERT INTO MUSICIAN_SONG
VALUES ( 4 , 'ENSAY');

INSERT INTO MUSICIAN_SONG
VALUES ( 5 , 'HAWA HAWA');









ALTER TABLE ALBUM ADD CONSTRAINT ALBUM_ID_NUMBER_FK FOREIGN KEY (ID_NUMBER) REFERENCES MUSICIAN (ID_NUMBER);
ALTER TABLE SONG ADD CONSTRAINT SONG_ALB_ID_FK FOREIGN KEY (ALB_ID) REFERENCES ALBUM (ALB_ID);
ALTER TABLE PLAYS ADD CONSTRAINT PLAYS_ID_NUMBER_FK FOREIGN KEY (ID_NUMBER) REFERENCES MUSICIAN (ID_NUMBER);
ALTER TABLE PLAYS ADD CONSTRAINT PLAYS_NAME_FK FOREIGN KEY (NAME) REFERENCES INSTRUMENT  (NAME);
ALTER TABLE MUSICIAN_SONG ADD CONSTRAINT MUSICIAN_SONG_ID_NUMBER_FK FOREIGN KEY (ID_NUMBER) REFERENCES MUSICIAN (ID_NUMBER);
ALTER TABLE MUSICIAN_SONG ADD CONSTRAINT MUSICIAN_SONG_TITLE_FK FOREIGN KEY (TITLE) REFERENCES SONG (TITLE);